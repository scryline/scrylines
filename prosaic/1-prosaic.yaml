id: '1'
title: prosaic
text: >-
  **Objective**


  This SaaS, tentatively named Prosaic, is a project-management tool which, by
  virtue of being prose-driven rather than task-driven, is more coherent, more
  effective, and more intuitive than its competitors...


  **Overview**


  Prosaic begins with a narrative description of the project. Each sentence is
  then "exploded" into an individual task, while the narrative remains a living
  document and the project home. A project has different chapters corresponding
  to its lifecycle: alpha release, MVP, V2.0. Each chapter may be divided into
  sections, e.g. one describing features, one discussing technical
  infrastructure, and one itemizing bugs and tweaks. Estimates are applied to
  paragraphs, not sentences, and each task page reiterates the paragraph the
  task is part of. Overall project status can always be seen at a glance by
  simply color-coding each sentence of the narrative according to their current
  state.


  **Chapter 1: MVP**


  _Site Home_


  Users visiting the site are shown a page describing Prosaic and a link to log
  in. They may log in with GitHub or Google. Upon logging in, they are
  immediately taken to a new project's home page, their existing project's home
  page, or a list of their projects, depending on their active project count.
  The project list is sorted reverse-chronologically and shows the last date of
  activity on that project.


  _Project Home_


  A project's home page begins with a list of links (to designs, repos, Slack
  channels, 1Password vaults, API documentation, etc.) Authors may add, edit,
  and remove links, which have display names and URLs.


  The home page continues with the project narrative. A narrative always begins
  with an Objective and an Overview before continuing to Chapter 1. Authors can
  edit the entire narrative in a single rich-HTML edit box which supports image
  embedding. They may also choose individual paragraphs to edit in place; insert
  new paragraphs, section headers, or chapter headers; or delete existing
  elements. Authors must explicitly save new or edited text, and if this will
  result in deletions, they must confirm that choice.


  Authors may also trigger a popup menu for chapters, sections, and paragraphs,
  but not individual sentences. These popup menus allow authors to save links
  (again, designs, API documents, etc.) which specifically correspond to that
  element. They also allow authors to save estimates for that element in either
  numerical or T-shirt-size formats.


  When any new narrative text is saved, tasks corresponding to the sentences in
  that text are generated. However his does not apply to the Objective or
  Overview with which the narrative beings, or to sentences which are wholly in
  parentheses. When a single sentence is split in two, the author is prompted to
  indicate which was the "original" that existing data will apply to. When two
  existing sentences are merged, the author is prompted to indicate which will
  be used and which will have its data discarded. (More elaborate merging is
  outside the scope of this MVP, but note that no data is ever actually lost -
  see below regarding storage.)


  Every sentence hyperlinks to its corresponding task page. Users may select the
  Narrative Progress View to quickly glimpse the overall project state by
  coloring or fading/bolding each sentence in the narrative according to its
  current state.


  (It is expected that other narrative-based views and measures will be
  innovated as well. Since the project is ultimately decomposed into tasks,
  other task-based views such as Kanban and GANTT are also a possibility, but it
  may or may not be advisable to double down on the "whole new paradigm"
  instead. Similarly it may or may not be advisable to give users the option to
  "explode" the narrative into JIRA tickets or Asana tasks, via their APIs,
  rather than native Prosaic tasks.)


  _Task Pages_


  A task page begins with the text of the entire paragraph in which the task is
  found, in which the task's specific sentence is clearly highlighted. Tasks are
  automatically assigned sequential numbers, in order of creation.


  Task pages then display a fully expanded list of the links for the most
  specific element (paragraph, section, chapter, project) in its hierarchy which
  has any custom links. The links for other tiers can be manually expanded if
  desired.


  Authors may assign a status to a task, as itemized in Project Metadata,
  described below. They may also assign a user. Users receive a notification
  when an assignment relevant to them changes. Authors may also add a paragraph
  of description to flesh out a task, but this should be used with caution, and
  only to describe specific implementation details, lest it detract from the
  project narrative.


  All users can enter rich-HTML comments on a task, in a discussion format with
  one-deep threading. Task comments are editable. When numbers beginning with #
  are found in a comment, and that number corresponds to an existing task, it
  becomes a link to that task page. Similarly, code commits which include a #
  followed by task numbers are shown on those tasks' page, with hyperlinks to
  those commits.


  Users may also switch to an event view of a task, which lists all of the
  events in a task's history, in reverse chronological order. Events include:
  creation, editing, estimate changes, link changes below the project level,
  status change, user assignation change, comment additions, comment edits, and
  code commits.


  _Contributors_


  A project's contributor page lists all the users with access to that project,
  and their access tier: admin, author, or readers. The creator of a project is
  automatically its admin. Admins may invite contributors, change others' access
  tier, and edit project metadata. Authors may write the narrative, edit links
  and estimates, and write task descriptions. Readers may read all the above and
  add comments to tasks.


  _Project Metadata_


  This is an administration page where authors may choose the estimation format,
  the list of valid task states, and the color or font-weight corresponding to
  each state for the Narrative Progress View. This is also where the project is
  connected to GitHub and/or other repositories for code-commit webhooks.
  Separately, this is also where the project's own GitHub repo, to which its
  data is stored, is configured.


  _Technical Infrastructure_


  This chapter of the project is a web app to be built on NextJS. It will be
  Dockerized and deployed to staging and production environments, as well as
  supporting local development both directly and via Docker. Authentication will
  initially be via Firebase.


  Data will be stored in a Postgres database, local for development and managed
  in the cloud. However, project data will also be stored in GitHub repositories
  in YAML format. Repo data may be externally edited and will be the ultimate
  source of truth. By default, repo data will be stored to Prosaic's own private
  repo, but users may also provide OAuth tokens to store it in their own
  repositories.
tasks:
  '1':
    hash: b0f91c2125fa77c1711e1d7f596c779a04644dcd1cc8a7e57a42542f5a34b991
    sentence: 'They may log in with GitHub or Google. '
    paragraph: >-
      Users visiting the site are shown a page describing Prosaic and a link to
      log in. They may log in with GitHub or Google. Upon logging in, they are
      immediately taken to a new project's home page, their existing project's
      home page, or a list of their projects, depending on their active project
      count. The project list is sorted reverse-chronologically and shows the
      last date of activity on that project.
    comments:
      - <p>This is just a comment.</p>
metadata: {}
success: true
gh:
  name: 1-prosaic.yaml
  path: prosaic/1-prosaic.yaml
  sha: ea68d17219531a712846ba0578ed56087b330881
  size: 7245
  url: >-
    https://api.github.com/repos/scryline/scrylines/contents/prosaic/1-prosaic.yaml?ref=main
  html_url: https://github.com/scryline/scrylines/blob/main/prosaic/1-prosaic.yaml
  git_url: >-
    https://api.github.com/repos/scryline/scrylines/git/blobs/ea68d17219531a712846ba0578ed56087b330881
  download_url: >-
    https://raw.githubusercontent.com/scryline/scrylines/main/prosaic/1-prosaic.yaml
  type: file
  content: |
    aWQ6ICcxJwp0aXRsZTogcHJvc2FpYwp0ZXh0OiA+LQogICoqT2JqZWN0aXZl
    KioKCgogIFRoaXMgU2FhUywgdGVudGF0aXZlbHkgbmFtZWQgUHJvc2FpYywg
    aXMgYSBwcm9qZWN0LW1hbmFnZW1lbnQgdG9vbCB3aGljaCwgYnkKICB2aXJ0
    dWUgb2YgYmVpbmcgcHJvc2UtZHJpdmVuIHJhdGhlciB0aGFuIHRhc2stZHJp
    dmVuLCBpcyBtb3JlIGNvaGVyZW50LCBtb3JlCiAgZWZmZWN0aXZlLCBhbmQg
    bW9yZSBpbnR1aXRpdmUgdGhhbiBpdHMgY29tcGV0aXRvcnMuLi4KCgogICoq
    T3ZlcnZpZXcqKgoKCiAgUHJvc2FpYyBiZWdpbnMgd2l0aCBhIG5hcnJhdGl2
    ZSBkZXNjcmlwdGlvbiBvZiB0aGUgcHJvamVjdC4gRWFjaCBzZW50ZW5jZSBp
    cwogIHRoZW4gImV4cGxvZGVkIiBpbnRvIGFuIGluZGl2aWR1YWwgdGFzaywg
    d2hpbGUgdGhlIG5hcnJhdGl2ZSByZW1haW5zIGEgbGl2aW5nCiAgZG9jdW1l
    bnQgYW5kIHRoZSBwcm9qZWN0IGhvbWUuIEEgcHJvamVjdCBoYXMgZGlmZmVy
    ZW50IGNoYXB0ZXJzIGNvcnJlc3BvbmRpbmcKICB0byBpdHMgbGlmZWN5Y2xl
    OiBhbHBoYSByZWxlYXNlLCBNVlAsIFYyLjAuIEVhY2ggY2hhcHRlciBtYXkg
    YmUgZGl2aWRlZCBpbnRvCiAgc2VjdGlvbnMsIGUuZy4gb25lIGRlc2NyaWJp
    bmcgZmVhdHVyZXMsIG9uZSBkaXNjdXNzaW5nIHRlY2huaWNhbAogIGluZnJh
    c3RydWN0dXJlLCBhbmQgb25lIGl0ZW1pemluZyBidWdzIGFuZCB0d2Vha3Mu
    IEVzdGltYXRlcyBhcmUgYXBwbGllZCB0bwogIHBhcmFncmFwaHMsIG5vdCBz
    ZW50ZW5jZXMsIGFuZCBlYWNoIHRhc2sgcGFnZSByZWl0ZXJhdGVzIHRoZSBw
    YXJhZ3JhcGggdGhlCiAgdGFzayBpcyBwYXJ0IG9mLiBPdmVyYWxsIHByb2pl
    Y3Qgc3RhdHVzIGNhbiBhbHdheXMgYmUgc2VlbiBhdCBhIGdsYW5jZSBieQog
    IHNpbXBseSBjb2xvci1jb2RpbmcgZWFjaCBzZW50ZW5jZSBvZiB0aGUgbmFy
    cmF0aXZlIGFjY29yZGluZyB0byB0aGVpciBjdXJyZW50CiAgc3RhdGUuCgoK
    ICAqKkNoYXB0ZXIgMTogTVZQKioKCgogIF9TaXRlIEhvbWVfCgoKICBVc2Vy
    cyB2aXNpdGluZyB0aGUgc2l0ZSBhcmUgc2hvd24gYSBwYWdlIGRlc2NyaWJp
    bmcgUHJvc2FpYyBhbmQgYSBsaW5rIHRvIGxvZwogIGluLiBUaGV5IG1heSBs
    b2cgaW4gd2l0aCBHaXRIdWIgb3IgR29vZ2xlLiBVcG9uIGxvZ2dpbmcgaW4s
    IHRoZXkgYXJlCiAgaW1tZWRpYXRlbHkgdGFrZW4gdG8gYSBuZXcgcHJvamVj
    dCdzIGhvbWUgcGFnZSwgdGhlaXIgZXhpc3RpbmcgcHJvamVjdCdzIGhvbWUK
    ICBwYWdlLCBvciBhIGxpc3Qgb2YgdGhlaXIgcHJvamVjdHMsIGRlcGVuZGlu
    ZyBvbiB0aGVpciBhY3RpdmUgcHJvamVjdCBjb3VudC4KICBUaGUgcHJvamVj
    dCBsaXN0IGlzIHNvcnRlZCByZXZlcnNlLWNocm9ub2xvZ2ljYWxseSBhbmQg
    c2hvd3MgdGhlIGxhc3QgZGF0ZSBvZgogIGFjdGl2aXR5IG9uIHRoYXQgcHJv
    amVjdC4KCgogIF9Qcm9qZWN0IEhvbWVfCgoKICBBIHByb2plY3QncyBob21l
    IHBhZ2UgYmVnaW5zIHdpdGggYSBsaXN0IG9mIGxpbmtzICh0byBkZXNpZ25z
    LCByZXBvcywgU2xhY2sKICBjaGFubmVscywgMVBhc3N3b3JkIHZhdWx0cywg
    QVBJIGRvY3VtZW50YXRpb24sIGV0Yy4pIEF1dGhvcnMgbWF5IGFkZCwgZWRp
    dCwKICBhbmQgcmVtb3ZlIGxpbmtzLCB3aGljaCBoYXZlIGRpc3BsYXkgbmFt
    ZXMgYW5kIFVSTHMuCgoKICBUaGUgaG9tZSBwYWdlIGNvbnRpbnVlcyB3aXRo
    IHRoZSBwcm9qZWN0IG5hcnJhdGl2ZS4gQSBuYXJyYXRpdmUgYWx3YXlzIGJl
    Z2lucwogIHdpdGggYW4gT2JqZWN0aXZlIGFuZCBhbiBPdmVydmlldyBiZWZv
    cmUgY29udGludWluZyB0byBDaGFwdGVyIDEuIEF1dGhvcnMgY2FuCiAgZWRp
    dCB0aGUgZW50aXJlIG5hcnJhdGl2ZSBpbiBhIHNpbmdsZSByaWNoLUhUTUwg
    ZWRpdCBib3ggd2hpY2ggc3VwcG9ydHMgaW1hZ2UKICBlbWJlZGRpbmcuIFRo
    ZXkgbWF5IGFsc28gY2hvb3NlIGluZGl2aWR1YWwgcGFyYWdyYXBocyB0byBl
    ZGl0IGluIHBsYWNlOyBpbnNlcnQKICBuZXcgcGFyYWdyYXBocywgc2VjdGlv
    biBoZWFkZXJzLCBvciBjaGFwdGVyIGhlYWRlcnM7IG9yIGRlbGV0ZSBleGlz
    dGluZwogIGVsZW1lbnRzLiBBdXRob3JzIG11c3QgZXhwbGljaXRseSBzYXZl
    IG5ldyBvciBlZGl0ZWQgdGV4dCwgYW5kIGlmIHRoaXMgd2lsbAogIHJlc3Vs
    dCBpbiBkZWxldGlvbnMsIHRoZXkgbXVzdCBjb25maXJtIHRoYXQgY2hvaWNl
    LgoKCiAgQXV0aG9ycyBtYXkgYWxzbyB0cmlnZ2VyIGEgcG9wdXAgbWVudSBm
    b3IgY2hhcHRlcnMsIHNlY3Rpb25zLCBhbmQgcGFyYWdyYXBocywKICBidXQg
    bm90IGluZGl2aWR1YWwgc2VudGVuY2VzLiBUaGVzZSBwb3B1cCBtZW51cyBh
    bGxvdyBhdXRob3JzIHRvIHNhdmUgbGlua3MKICAoYWdhaW4sIGRlc2lnbnMs
    IEFQSSBkb2N1bWVudHMsIGV0Yy4pIHdoaWNoIHNwZWNpZmljYWxseSBjb3Jy
    ZXNwb25kIHRvIHRoYXQKICBlbGVtZW50LiBUaGV5IGFsc28gYWxsb3cgYXV0
    aG9ycyB0byBzYXZlIGVzdGltYXRlcyBmb3IgdGhhdCBlbGVtZW50IGluIGVp
    dGhlcgogIG51bWVyaWNhbCBvciBULXNoaXJ0LXNpemUgZm9ybWF0cy4KCgog
    IFdoZW4gYW55IG5ldyBuYXJyYXRpdmUgdGV4dCBpcyBzYXZlZCwgdGFza3Mg
    Y29ycmVzcG9uZGluZyB0byB0aGUgc2VudGVuY2VzIGluCiAgdGhhdCB0ZXh0
    IGFyZSBnZW5lcmF0ZWQuIEhvd2V2ZXIgaGlzIGRvZXMgbm90IGFwcGx5IHRv
    IHRoZSBPYmplY3RpdmUgb3IKICBPdmVydmlldyB3aXRoIHdoaWNoIHRoZSBu
    YXJyYXRpdmUgYmVpbmdzLCBvciB0byBzZW50ZW5jZXMgd2hpY2ggYXJlIHdo
    b2xseSBpbgogIHBhcmVudGhlc2VzLiBXaGVuIGEgc2luZ2xlIHNlbnRlbmNl
    IGlzIHNwbGl0IGluIHR3bywgdGhlIGF1dGhvciBpcyBwcm9tcHRlZCB0bwog
    IGluZGljYXRlIHdoaWNoIHdhcyB0aGUgIm9yaWdpbmFsIiB0aGF0IGV4aXN0
    aW5nIGRhdGEgd2lsbCBhcHBseSB0by4gV2hlbiB0d28KICBleGlzdGluZyBz
    ZW50ZW5jZXMgYXJlIG1lcmdlZCwgdGhlIGF1dGhvciBpcyBwcm9tcHRlZCB0
    byBpbmRpY2F0ZSB3aGljaCB3aWxsCiAgYmUgdXNlZCBhbmQgd2hpY2ggd2ls
    bCBoYXZlIGl0cyBkYXRhIGRpc2NhcmRlZC4gKE1vcmUgZWxhYm9yYXRlIG1l
    cmdpbmcgaXMKICBvdXRzaWRlIHRoZSBzY29wZSBvZiB0aGlzIE1WUCwgYnV0
    IG5vdGUgdGhhdCBubyBkYXRhIGlzIGV2ZXIgYWN0dWFsbHkgbG9zdCAtCiAg
    c2VlIGJlbG93IHJlZ2FyZGluZyBzdG9yYWdlLikKCgogIEV2ZXJ5IHNlbnRl
    bmNlIGh5cGVybGlua3MgdG8gaXRzIGNvcnJlc3BvbmRpbmcgdGFzayBwYWdl
    LiBVc2VycyBtYXkgc2VsZWN0IHRoZQogIE5hcnJhdGl2ZSBQcm9ncmVzcyBW
    aWV3IHRvIHF1aWNrbHkgZ2xpbXBzZSB0aGUgb3ZlcmFsbCBwcm9qZWN0IHN0
    YXRlIGJ5CiAgY29sb3Jpbmcgb3IgZmFkaW5nL2JvbGRpbmcgZWFjaCBzZW50
    ZW5jZSBpbiB0aGUgbmFycmF0aXZlIGFjY29yZGluZyB0byBpdHMKICBjdXJy
    ZW50IHN0YXRlLgoKCiAgKEl0IGlzIGV4cGVjdGVkIHRoYXQgb3RoZXIgbmFy
    cmF0aXZlLWJhc2VkIHZpZXdzIGFuZCBtZWFzdXJlcyB3aWxsIGJlCiAgaW5u
    b3ZhdGVkIGFzIHdlbGwuIFNpbmNlIHRoZSBwcm9qZWN0IGlzIHVsdGltYXRl
    bHkgZGVjb21wb3NlZCBpbnRvIHRhc2tzLAogIG90aGVyIHRhc2stYmFzZWQg
    dmlld3Mgc3VjaCBhcyBLYW5iYW4gYW5kIEdBTlRUIGFyZSBhbHNvIGEgcG9z
    c2liaWxpdHksIGJ1dCBpdAogIG1heSBvciBtYXkgbm90IGJlIGFkdmlzYWJs
    ZSB0byBkb3VibGUgZG93biBvbiB0aGUgIndob2xlIG5ldyBwYXJhZGlnbSIK
    ICBpbnN0ZWFkLiBTaW1pbGFybHkgaXQgbWF5IG9yIG1heSBub3QgYmUgYWR2
    aXNhYmxlIHRvIGdpdmUgdXNlcnMgdGhlIG9wdGlvbiB0bwogICJleHBsb2Rl
    IiB0aGUgbmFycmF0aXZlIGludG8gSklSQSB0aWNrZXRzIG9yIEFzYW5hIHRh
    c2tzLCB2aWEgdGhlaXIgQVBJcywKICByYXRoZXIgdGhhbiBuYXRpdmUgUHJv
    c2FpYyB0YXNrcy4pCgoKICBfVGFzayBQYWdlc18KCgogIEEgdGFzayBwYWdl
    IGJlZ2lucyB3aXRoIHRoZSB0ZXh0IG9mIHRoZSBlbnRpcmUgcGFyYWdyYXBo
    IGluIHdoaWNoIHRoZSB0YXNrIGlzCiAgZm91bmQsIGluIHdoaWNoIHRoZSB0
    YXNrJ3Mgc3BlY2lmaWMgc2VudGVuY2UgaXMgY2xlYXJseSBoaWdobGlnaHRl
    ZC4gVGFza3MgYXJlCiAgYXV0b21hdGljYWxseSBhc3NpZ25lZCBzZXF1ZW50
    aWFsIG51bWJlcnMsIGluIG9yZGVyIG9mIGNyZWF0aW9uLgoKCiAgVGFzayBw
    YWdlcyB0aGVuIGRpc3BsYXkgYSBmdWxseSBleHBhbmRlZCBsaXN0IG9mIHRo
    ZSBsaW5rcyBmb3IgdGhlIG1vc3QKICBzcGVjaWZpYyBlbGVtZW50IChwYXJh
    Z3JhcGgsIHNlY3Rpb24sIGNoYXB0ZXIsIHByb2plY3QpIGluIGl0cyBoaWVy
    YXJjaHkgd2hpY2gKICBoYXMgYW55IGN1c3RvbSBsaW5rcy4gVGhlIGxpbmtz
    IGZvciBvdGhlciB0aWVycyBjYW4gYmUgbWFudWFsbHkgZXhwYW5kZWQgaWYK
    ICBkZXNpcmVkLgoKCiAgQXV0aG9ycyBtYXkgYXNzaWduIGEgc3RhdHVzIHRv
    IGEgdGFzaywgYXMgaXRlbWl6ZWQgaW4gUHJvamVjdCBNZXRhZGF0YSwKICBk
    ZXNjcmliZWQgYmVsb3cuIFRoZXkgbWF5IGFsc28gYXNzaWduIGEgdXNlci4g
    VXNlcnMgcmVjZWl2ZSBhIG5vdGlmaWNhdGlvbgogIHdoZW4gYW4gYXNzaWdu
    bWVudCByZWxldmFudCB0byB0aGVtIGNoYW5nZXMuIEF1dGhvcnMgbWF5IGFs
    c28gYWRkIGEgcGFyYWdyYXBoCiAgb2YgZGVzY3JpcHRpb24gdG8gZmxlc2gg
    b3V0IGEgdGFzaywgYnV0IHRoaXMgc2hvdWxkIGJlIHVzZWQgd2l0aCBjYXV0
    aW9uLCBhbmQKICBvbmx5IHRvIGRlc2NyaWJlIHNwZWNpZmljIGltcGxlbWVu
    dGF0aW9uIGRldGFpbHMsIGxlc3QgaXQgZGV0cmFjdCBmcm9tIHRoZQogIHBy
    b2plY3QgbmFycmF0aXZlLgoKCiAgQWxsIHVzZXJzIGNhbiBlbnRlciByaWNo
    LUhUTUwgY29tbWVudHMgb24gYSB0YXNrLCBpbiBhIGRpc2N1c3Npb24gZm9y
    bWF0IHdpdGgKICBvbmUtZGVlcCB0aHJlYWRpbmcuIFRhc2sgY29tbWVudHMg
    YXJlIGVkaXRhYmxlLiBXaGVuIG51bWJlcnMgYmVnaW5uaW5nIHdpdGggIwog
    IGFyZSBmb3VuZCBpbiBhIGNvbW1lbnQsIGFuZCB0aGF0IG51bWJlciBjb3Jy
    ZXNwb25kcyB0byBhbiBleGlzdGluZyB0YXNrLCBpdAogIGJlY29tZXMgYSBs
    aW5rIHRvIHRoYXQgdGFzayBwYWdlLiBTaW1pbGFybHksIGNvZGUgY29tbWl0
    cyB3aGljaCBpbmNsdWRlIGEgIwogIGZvbGxvd2VkIGJ5IHRhc2sgbnVtYmVy
    cyBhcmUgc2hvd24gb24gdGhvc2UgdGFza3MnIHBhZ2UsIHdpdGggaHlwZXJs
    aW5rcyB0bwogIHRob3NlIGNvbW1pdHMuCgoKICBVc2VycyBtYXkgYWxzbyBz
    d2l0Y2ggdG8gYW4gZXZlbnQgdmlldyBvZiBhIHRhc2ssIHdoaWNoIGxpc3Rz
    IGFsbCBvZiB0aGUKICBldmVudHMgaW4gYSB0YXNrJ3MgaGlzdG9yeSwgaW4g
    cmV2ZXJzZSBjaHJvbm9sb2dpY2FsIG9yZGVyLiBFdmVudHMgaW5jbHVkZToK
    ICBjcmVhdGlvbiwgZWRpdGluZywgZXN0aW1hdGUgY2hhbmdlcywgbGluayBj
    aGFuZ2VzIGJlbG93IHRoZSBwcm9qZWN0IGxldmVsLAogIHN0YXR1cyBjaGFu
    Z2UsIHVzZXIgYXNzaWduYXRpb24gY2hhbmdlLCBjb21tZW50IGFkZGl0aW9u
    cywgY29tbWVudCBlZGl0cywgYW5kCiAgY29kZSBjb21taXRzLgoKCiAgX0Nv
    bnRyaWJ1dG9yc18KCgogIEEgcHJvamVjdCdzIGNvbnRyaWJ1dG9yIHBhZ2Ug
    bGlzdHMgYWxsIHRoZSB1c2VycyB3aXRoIGFjY2VzcyB0byB0aGF0IHByb2pl
    Y3QsCiAgYW5kIHRoZWlyIGFjY2VzcyB0aWVyOiBhZG1pbiwgYXV0aG9yLCBv
    ciByZWFkZXJzLiBUaGUgY3JlYXRvciBvZiBhIHByb2plY3QgaXMKICBhdXRv
    bWF0aWNhbGx5IGl0cyBhZG1pbi4gQWRtaW5zIG1heSBpbnZpdGUgY29udHJp
    YnV0b3JzLCBjaGFuZ2Ugb3RoZXJzJyBhY2Nlc3MKICB0aWVyLCBhbmQgZWRp
    dCBwcm9qZWN0IG1ldGFkYXRhLiBBdXRob3JzIG1heSB3cml0ZSB0aGUgbmFy
    cmF0aXZlLCBlZGl0IGxpbmtzCiAgYW5kIGVzdGltYXRlcywgYW5kIHdyaXRl
    IHRhc2sgZGVzY3JpcHRpb25zLiBSZWFkZXJzIG1heSByZWFkIGFsbCB0aGUg
    YWJvdmUgYW5kCiAgYWRkIGNvbW1lbnRzIHRvIHRhc2tzLgoKCiAgX1Byb2pl
    Y3QgTWV0YWRhdGFfCgoKICBUaGlzIGlzIGFuIGFkbWluaXN0cmF0aW9uIHBh
    Z2Ugd2hlcmUgYXV0aG9ycyBtYXkgY2hvb3NlIHRoZSBlc3RpbWF0aW9uIGZv
    cm1hdCwKICB0aGUgbGlzdCBvZiB2YWxpZCB0YXNrIHN0YXRlcywgYW5kIHRo
    ZSBjb2xvciBvciBmb250LXdlaWdodCBjb3JyZXNwb25kaW5nIHRvCiAgZWFj
    aCBzdGF0ZSBmb3IgdGhlIE5hcnJhdGl2ZSBQcm9ncmVzcyBWaWV3LiBUaGlz
    IGlzIGFsc28gd2hlcmUgdGhlIHByb2plY3QgaXMKICBjb25uZWN0ZWQgdG8g
    R2l0SHViIGFuZC9vciBvdGhlciByZXBvc2l0b3JpZXMgZm9yIGNvZGUtY29t
    bWl0IHdlYmhvb2tzLgogIFNlcGFyYXRlbHksIHRoaXMgaXMgYWxzbyB3aGVy
    ZSB0aGUgcHJvamVjdCdzIG93biBHaXRIdWIgcmVwbywgdG8gd2hpY2ggaXRz
    CiAgZGF0YSBpcyBzdG9yZWQsIGlzIGNvbmZpZ3VyZWQuCgoKICBfVGVjaG5p
    Y2FsIEluZnJhc3RydWN0dXJlXwoKCiAgVGhpcyBjaGFwdGVyIG9mIHRoZSBw
    cm9qZWN0IGlzIGEgd2ViIGFwcCB0byBiZSBidWlsdCBvbiBOZXh0SlMuIEl0
    IHdpbGwgYmUKICBEb2NrZXJpemVkIGFuZCBkZXBsb3llZCB0byBzdGFnaW5n
    IGFuZCBwcm9kdWN0aW9uIGVudmlyb25tZW50cywgYXMgd2VsbCBhcwogIHN1
    cHBvcnRpbmcgbG9jYWwgZGV2ZWxvcG1lbnQgYm90aCBkaXJlY3RseSBhbmQg
    dmlhIERvY2tlci4gQXV0aGVudGljYXRpb24gd2lsbAogIGluaXRpYWxseSBi
    ZSB2aWEgRmlyZWJhc2UuCgoKICBEYXRhIHdpbGwgYmUgc3RvcmVkIGluIGEg
    UG9zdGdyZXMgZGF0YWJhc2UsIGxvY2FsIGZvciBkZXZlbG9wbWVudCBhbmQg
    bWFuYWdlZAogIGluIHRoZSBjbG91ZC4gSG93ZXZlciwgcHJvamVjdCBkYXRh
    IHdpbGwgYWxzbyBiZSBzdG9yZWQgaW4gR2l0SHViIHJlcG9zaXRvcmllcwog
    IGluIFlBTUwgZm9ybWF0LiBSZXBvIGRhdGEgbWF5IGJlIGV4dGVybmFsbHkg
    ZWRpdGVkIGFuZCB3aWxsIGJlIHRoZSB1bHRpbWF0ZQogIHNvdXJjZSBvZiB0
    cnV0aC4gQnkgZGVmYXVsdCwgcmVwbyBkYXRhIHdpbGwgYmUgc3RvcmVkIHRv
    IFByb3NhaWMncyBvd24gcHJpdmF0ZQogIHJlcG8sIGJ1dCB1c2VycyBtYXkg
    YWxzbyBwcm92aWRlIE9BdXRoIHRva2VucyB0byBzdG9yZSBpdCBpbiB0aGVp
    ciBvd24KICByZXBvc2l0b3JpZXMuCnRhc2tzOiB7fQptZXRhZGF0YToge30K
  encoding: base64
  _links:
    self: >-
      https://api.github.com/repos/scryline/scrylines/contents/prosaic/1-prosaic.yaml?ref=main
    git: >-
      https://api.github.com/repos/scryline/scrylines/git/blobs/ea68d17219531a712846ba0578ed56087b330881
    html: https://github.com/scryline/scrylines/blob/main/prosaic/1-prosaic.yaml
  success: false
